El programa hace uso de los siguientes archivos: PG.c, Arreglos.h, Elem.h, Cadenas.h, AT1.txt, AT2.txt y AT3.txt

Para: PG.c

#include <stdio.h>
#include<stdlib.h>
#include<string.h>
#include"Elem.h"
#include"Arreglos.h"
#include "Cadenas.h"

//Nombre: Brayan Ramirez Benitez. Grupo: 2CV12. Semestre: 2021-2. Materia: Teoria Computacional. 

int main(int argc, char *argv[]){
	FILE *ENT = fopen(*(argv+1), "r");
	Elem ttransicion[18], estador;// ttransicion es la tabla de transicion, estador es el ultimo estado al que lleva la cadena
	int opcion, opcion2, j = 1, i = tamarreglo(ENT, ttransicion);//determina la cantidad de cadenas en el documento
	char cadena[20];//cadena ingresada por el usuario
		
	rewind(ENT);//regresa el puntero al principio del documento
	leearreglo(ENT,ttransicion,i);//guarda el doc en un arreglo
	fclose(ENT);//cierra el documento
	
	//inicia el menu para el usuario
	while (j != 0){
		printf("El automata AT1.txt acepta las cadenas con tres 0's consecutivos.\n");
		printf("El automata AT2.txt acepta las cadenas que terminan en 1.\nEl automata AT3.txt acepta las cadenas que contienen 01 como subcadena.\n\n");
		printf("El alfabeto es {0,1} para todos los automatas\n\n");
		printf("Seleccione una opcion.\n\n1-) Comprobar una cadena.\n2-) Salir.\n");
		scanf("%d",&opcion);
		switch(opcion){
			case 1:// inicia el proceso para comprobar si acepta la cadena
				system("cls");
				printf("Ingrese una cadena\n");
				scanf("%s", cadena);//recoge la cadena del usuario
				estador = compruebac(ttransicion,cadena);//devuelve el ultimo estado al que lleva la cadena
				EsEstadodeAcep(estador);//pregunta si es estado de aceptacion regresa un mensaje en pantalla
				printf("\nSeleccione una opcion.\n1-)Volver al menu.\n2-)Salir.\n");
				scanf("%d",&opcion2);
				if(opcion2 == 1){//regresa al menu inicial
					system("cls");
					j = 1;
				}
				else if(opcion2 == 2)// termina el programa
					j = 0;
				else{
					system("cls");//regresa al menu inicial
					printf("\nOpcion no valida-\n\n");
				}
				break;
			case 2://termina el programa
				system("cls");
				j = 0;
				printf("Gracias por usar software libre :D, 10/10");
				break;
			default://permanece en el menu
				system("cls");
				printf("Opcion no valida\n\n");
				break;
		}
	}
	return 0;
}
/*
Para abrir el programa escriba en la consola "Nombre_programa Nombre_documento.txt", Ejemplo : "PG AT1.txt" 

Instrucciones para crear nuevos automatas en txt
- todos los estados tienen un simbolo (+, -, *) seguido de una letra por ultimo el numero de estado ejemplo: *q5, -q1, +q3
- los estados de aceptacion tienen un *
- el estado inicial es -
- todos los demas llevan un +
- los vacios -0-
- si el estado inicial es de aceptacion se coloca un *
- No puede tener mas de 6 estados, sin embargo esto se puede modificar en el codigo
- si desea crear un documento recuerde llenar simpre los 6 estados
*/


Para: Arreglos.h

void leearreglo(FILE *ENT,char* a[],int tam){//recoge la tabla de trancisiones del documento de texto
	int i;
	  
	for(i=0;i<tam;i++) 
		LeeElem(ENT,a[i]=(Elem)malloc(80));
}

void escribearreglo(Elem a[],int tam){// muestra en pantalla la tabla de transiciones
	int i;
	
	for(i=0;i<tam;i++)
	    ImpElem(a[i]);	
}

int tamarreglo(FILE *ENT, Elem a[]){// devuelve la cantidad de cadenas de un documento de texto
	int i;
	
	for(i=0;(fscanf(ENT,"%s",a))!=EOF;i++){
	}//tamaÃ±o del arreglo
	return i;
}

//escribearreglo(ttransicion,i); //esta funcion permite imprimir en pantalla el automata en una sola columna


Para: Cadenas.h

Elem ingresac(Elem e, char c, Elem a[]){//Devuelve un estado asignado para un caracter respecto a la tabla de transiciones
	
	if(e[2] == '0'){
		if(c == '0')
			return a[1];
		else if(c == '1')
			return a[2];
	}else if(e[2] == '1'){
		if (c == '0')
			return a[4];
		else if(c == '1')
			return a[5];
	}else if(e[2] == '2'){
		if (c == '0')
			return a[7];
		else if(c == '1')
			return a[8];
	}else if(e[2] == '3'){
		if (c == '0')
			return a[10];
		else if(c == '1')
			return a[11];	
	}else if(e[2] == '4'){
		if (c == '0')
			return a[13];
		else if(c == '1')
			return a[14];	
	}else if(e[2] == '5'){
		if (c == '0')
			return a[16];
		else if(c == '1')
			return a[17];	
	}else
		return "-0-";
}

Elem compruebac (Elem a[], Elem cadena){//Comprobacion para cada caracter de la cadena ingresada, regresa el ultimo estado al que se llego
	int i, j = 0, tam;
	Elem estado = a[0];//recoge el estado inicial del automata
	
	tam = strlen(cadena);//cantidad de caracteres de una cadena
	i = tam-1;
	
	while(j<=i){//envia a la funcion ingresac un estado, un caracter de la cadena y la tabla de trancision del automata donde regresa un estado
		estado = ingresac(estado, cadena[j], a);
		j++;
	}
	
	return estado;
}

void EsEstadodeAcep(Elem estador){//comprueba si el ultimo estado es de aceptacion	
	
	if (estador[0] == '*')// si el estado contiene un * quiere decir que es de aceptacion
		printf("\nLa cadena fue aceptada por el automata\n");
	else// en caso contrario es un estado inicial, normal o vacio
		printf("\nLa cadena fue rechazada por el automata\n");
	
}


Para Elem.h

typedef char* Elem;

void ImpElem(Elem e){ fprintf(stdout,"%s\n",e);	}//imprime en pantalla un elemento

void LeeElem(FILE *ENT,Elem e){	fscanf(ENT,"%s",e);	}// recoge una cadena de un documento de texto


Para: AT1.txt

-q0 +q1 -q0
+q1 +q2 -q0
+q2 *q3 -q0
*q3 *q3 *q3
-0- -0- -0-
-0- -0- -0-

Para: AT2.txt

-q0 -q0 *q1
*q1 -q0 *q1
-0- -0- -0-
-0- -0- -0-
-0- -0- -0-
-0- -0- -0-

Para: AT3.txt

-q0 +q1 -q0
+q1 +q1 *q2
*q2 *q2 *q2
-0- -0- -0-
-0- -0- -0-
-0- -0- -0-


















